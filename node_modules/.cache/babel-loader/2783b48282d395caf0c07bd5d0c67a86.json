{"ast":null,"code":"import _regeneratorRuntime from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/basantashah/Projects/NoticeBoard_frontEnd/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/basantashah/Projects/NoticeBoard_frontEnd/src/component/loginPage/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Cookies from 'universal-cookie';\nimport Particles from 'react-particles-js';\nimport { getToken } from './action';\nimport config from '../../config/config';\nimport './styles.css';\nimport image from \"../../assets/islington.png\";\nvar particleOpt = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props));\n\n    _this.handleChange = function (key, value) {\n      _this.setState(_defineProperty({}, key, value.target.value));\n    };\n\n    _this.login =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, res, cookies;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"login called\");\n              _context.prev = 1;\n              console.log(\"login called inside try\");\n              _context.next = 5;\n              return fetch(config.login, {\n                method: \"POST\",\n                headers: {\n                  'Accept': \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  email: _this.state.userName,\n                  password: _this.state.password\n                })\n              });\n\n            case 5:\n              response = _context.sent;\n              console.log(\"login called inside try getting response\", response);\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              res = _context.sent;\n\n              if (res.status) {\n                console.log('result', res);\n\n                _this.props.callGetToken(res.account.token);\n\n                cookies = new Cookies();\n                cookies.set('loggedIn', true, {\n                  path: '/'\n                });\n                cookies.set('token', res.account.token, {\n                  path: '/'\n                });\n\n                _this.props.history.push('/mynotice');\n              } else {\n                _this.setState({\n                  modal: !_this.state.modal\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n    _this.state = {\n      userName: '',\n      password: '',\n      modal: false // this.handleChange = this.handleChange.bind(this)\n\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showModal = _this.showModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      if (this.state.userName != '' && this.state.password != '') {\n        this.login();\n      } else {\n        alert(\"username or password empty\");\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"particle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"particleJs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        params: particleOpt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        class: \"center\",\n        alt: \"islington\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        class: \"form-control\",\n        placeholder: \"Email\",\n        required: \"required\",\n        onChange: function onChange(text) {\n          _this2.handleChange('userName', text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        class: \"form-control\",\n        placeholder: \"Password\",\n        required: \"required\",\n        onChange: function onChange(text) {\n          _this2.handleChange('password', text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary btn-block\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Log in\")), console.log(this.props.token)), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Login Error\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Username or password does not match\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"cancel\")))));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.Token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    callGetToken: function callGetToken(value) {\n      dispatch(getToken(value));\n    }\n  };\n};\n\nvar login = connect(mapStateToProps, mapDispatchToProps)(LoginPage);\nexport default withRouter(login);","map":{"version":3,"sources":["/Users/basantashah/Projects/NoticeBoard_frontEnd/src/component/loginPage/index.js"],"names":["React","Component","withRouter","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Cookies","Particles","getToken","config","image","particleOpt","particles","number","value","density","enable","value_area","LoginPage","props","handleChange","key","setState","target","login","console","log","fetch","method","headers","body","JSON","stringify","email","state","userName","password","response","json","res","status","callGetToken","account","token","cookies","set","path","history","push","modal","handleSubmit","bind","showModal","event","alert","preventDefault","text","mapStateToProps","Token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Cookies from 'universal-cookie';\nimport Particles from 'react-particles-js';\nimport {getToken} from './action'\nimport config from '../../config/config'\nimport './styles.css'\nimport image from \"../../assets/islington.png\"\n\n\nconst particleOpt = {\n  particles:{\n    number:{\n      value:150,\n      density:{\n        enable:true,\n        value_area:800\n      }\n    }\n  }\n}\n\nclass LoginPage extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            userName:'',\n            password:'',\n            modal:false,\n        }\n       // this.handleChange = this.handleChange.bind(this)\n       this.handleSubmit = this.handleSubmit.bind(this)\n       this.showModal = this.showModal.bind(this)\n    }\nhandleChange = (key,value)=> {\n    this.setState({\n        [key]:value.target.value\n    })\n}\n\nhandleSubmit(event){\n    if(this.state.userName!=''&&this.state.password!='')\n    {\n     \n    \n        this.login()\n    }\n    else{\n        alert(\"username or password empty\")\n    }\n    event.preventDefault()\n    \n}\nshowModal(){\n this.setState({\n     modal:!this.state.modal\n })\n  }\n\nlogin =async() => {\n    console.log(\"login called\")\n    try{\n        console.log(\"login called inside try\")\n        const response = await fetch(config.login, {\n            method: \"POST\",\n            headers: {\n              'Accept': \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n              body: JSON.stringify({\n               email:this.state.userName,\n               password:this.state.password\n            })\n          });\n          console.log(\"login called inside try getting response\",response)\n          let res = await response.json();\n          if(res.status){\n            console.log('result',res)\n            this.props.callGetToken(res.account.token)\n            const cookies = new Cookies();\n            cookies.set('loggedIn',true,{path:'/'})\n            cookies.set('token',res.account.token,{path:'/'})\n            this.props.history.push('/mynotice')\n          }\n          else{\n            this.setState({\n                modal:!this.state.modal\n            })\n          }\n    }\n    catch(e){\n\n    }\n}\n\n  render() {\n    return (\n\n<div className=\"particle\">\n<div className=\"particleJs\">\n  <Particles \n  params={particleOpt}\n  />\n  </div>\n<div class=\"login-form\">\n\n    <form  onSubmit={this.handleSubmit}>\n        \n        <img src={image} class=\"center\" alt=\"islington\"/>      \n        <div class=\"form-group\">\n            <input type=\"email\" class=\"form-control\" placeholder=\"Email\" required=\"required\"  onChange={(text)=>{this.handleChange('userName',text)}}/>\n        </div>\n        <div class=\"form-group\">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"required\"  onChange={(text)=>{this.handleChange('password',text)}} />\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary btn-block\" onClick = {this.handleSubmit}>Log in</button>\n        </div> \n        {console.log(this.props.token)}\n    </form>\n    <Modal isOpen={this.state.modal} toggle={this.showModal} >\n          <ModalHeader toggle={this.showModal}>Login Error</ModalHeader>\n          <ModalBody>\n            Username or password does not match\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"secondary\" onClick={this.showModal}>cancel</Button>\n          </ModalFooter>\n        </Modal>\n    \n</div>\n</div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return{\n      token : state.Token\n    \n    }\n  }\n  \n  \n  const mapDispatchToProps = dispatch =>{\n  return{\n      callGetToken:(value)=>{\n          dispatch(getToken(value))\n      }\n  }\n  }\n\n  const login = connect(mapStateToProps,mapDispatchToProps)(LoginPage)\nexport default withRouter(login) ;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}