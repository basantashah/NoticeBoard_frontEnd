{"ast":null,"code":"import _regeneratorRuntime from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/basantashah/Projects/notice_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/basantashah/Projects/notice_front/src/component/postNotice/index.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport Cookies from 'universal-cookie';\nimport NavBar from '../navBar';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './postNotice.css';\nimport config from '../../config/config';\nvar wrapper = {\n  display: 'flex',\n  'flex-direction': 'row'\n};\nvar noticeType = [{\n  label: \"Notice\",\n  value: 'notice'\n}, {\n  label: \"Application\",\n  value: 'application'\n}, {\n  label: \"Schedule\",\n  value: 'schedule'\n}];\nvar Urgent = [{\n  label: \"True\",\n  value: true\n}, {\n  label: \"False\",\n  value: false\n}];\nvar department = [{\n  label: \"RTE\",\n  value: \"RTE\"\n}, {\n  label: \"Finance\",\n  value: \"Finance\"\n}, {\n  label: \"Student Department\",\n  value: \"Student Department\"\n}, {\n  label: \"ACADEMIC\",\n  value: \"ACADEMIC\"\n}, {\n  label: \"IT\",\n  value: \"IT\"\n}, {\n  label: \"Other\",\n  value: \"Other\"\n}];\n\nvar NoticePost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoticePost, _Component);\n\n  function NoticePost() {\n    var _this;\n\n    _classCallCheck(this, NoticePost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoticePost).call(this));\n\n    _this.handleChange = function (key, value) {\n      console.log(key, value);\n\n      _this.setState(_defineProperty({}, key, value.target.value));\n    };\n\n    _this.handleNoticeType = function (selectedOption) {\n      console.log('notice type', selectedOption);\n\n      _this.setState({\n        noticeType: selectedOption.value\n      });\n    };\n\n    _this.handleDepartment = function (selectedOption) {\n      console.log('notice type', selectedOption);\n\n      _this.setState({\n        department: selectedOption.value\n      });\n    };\n\n    _this.handleSubject = function (text) {\n      _this.setState({\n        subject: text.target.value\n      });\n    };\n\n    _this.handleUrgent = function (e) {\n      _this.setState({\n        urgent: e.value\n      });\n    };\n\n    _this.handleMessage = function (e) {\n      _this.setState({\n        message: e.target.value\n      });\n\n      console.log('message', e.target.value);\n    };\n\n    _this.postNotice = function () {\n      _this.props.history.push('/notice');\n    };\n\n    _this.browseNotice = function () {\n      _this.props.history.push('/noticeboard');\n    };\n\n    _this.handletitle = function (text) {\n      _this.setState({\n        title: text.target.value\n      });\n    };\n\n    _this.handleStatus = function (e) {\n      _this.setState({\n        status: e.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      if (_this.state.title == \"\" || _this.state.noticeType == \"\" || _this.state.department == \"\" || _this.state.message == \"\") {\n        _this.setState({\n          showError: true\n        });\n\n        return;\n      } else {\n        _this.submitForm();\n      }\n\n      event.preventDefault();\n    };\n\n    _this.submitForm =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var cookies, token, response, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cookies = new Cookies();\n              token = cookies.get('token');\n              _context.prev = 2;\n              console.log(\"login called inside try\");\n              _context.next = 6;\n              return fetch(config.postNotice, {\n                method: \"POST\",\n                headers: {\n                  'Accept': \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  Authorization: 'Bearer ' + token\n                },\n                body: JSON.stringify({\n                  title: _this.state.title,\n                  expiry: _this.state.expiryDate,\n                  subject: _this.state.subject,\n                  content: _this.state.message,\n                  department: _this.state.department,\n                  urgent: _this.state.urgent,\n                  status: _this.state.status\n                })\n              });\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              res = _context.sent;\n\n              if (res.status) {\n                _this.setState({\n                  modal: !_this.state.modal\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n    _this.state = {\n      showError: false,\n      title: \"\",\n      titleError: 'Title is required',\n      subject: \"\",\n      subjectError: \"Subject is required\",\n      noticeType: \"\",\n      noticeTypeError: 'Please select notice type',\n      urgent: false,\n      startDate: new Date(),\n      expiryDate: new Date(),\n      message: \"\",\n      messageError: 'Message is required',\n      department: \"\",\n      departmentError: 'Please select department',\n      modal: false,\n      status: true // this.handleChange = this.handleChange.bind(this)\n\n    };\n    _this.handleStartDate = _this.handleStartDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleExpiryDate = _this.handleExpiryDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showModal = _this.showModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NoticePost, [{\n    key: \"handleStartDate\",\n    value: function handleStartDate(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"handleExpiryDate\",\n    value: function handleExpiryDate(date) {\n      this.setState({\n        expiryDate: date\n      });\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"post-notice-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"post-notice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"form-notice\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"Title\",\n        required: \"required\",\n        value: this.state.title,\n        onChange: function onChange(text) {\n          _this2.handletitle(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"text\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.showError && this.state.title == \"\" && this.state.titleError)), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Subject\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"subject\",\n        required: \"required\",\n        value: this.state.subject,\n        onChange: function onChange(text) {\n          _this2.handleSubject(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"text\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, this.state.showError && this.state.subject == \"\" && this.state.subjectError)), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Notice type\"), React.createElement(Select, {\n        options: noticeType,\n        onChange: this.handleNoticeType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"text\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, this.state.showError && this.state.noticeType == \"\" && this.state.noticeTypeError)), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Urgent\"), React.createElement(Select, {\n        options: Urgent,\n        onChange: this.handleUrgent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Select, {\n        options: Urgent,\n        onChange: this.handleStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Department\"), React.createElement(Select, {\n        options: department,\n        onChange: this.handleDepartment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"text\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, this.state.showError && this.state.department == \"\" && this.state.departmentError)), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Date\"), React.createElement(DatePicker, {\n        className: \"date-picker\",\n        selected: this.state.startDate,\n        onChange: this.handleStartDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Expire period\"), React.createElement(DatePicker, {\n        className: \"date-picker\",\n        selected: this.state.expiryDate,\n        onChange: this.handleExpiryDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Message\"), React.createElement(\"textarea\", {\n        class: \"form-control rounded-0\",\n        rows: \"6\",\n        onChange: this.handleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(\"text\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, this.state.showError && this.state.message == \"\" && this.state.messageError)), React.createElement(\"input\", {\n        type: \"submit\",\n        class: \"btn btn-primary btn-lg btn-block\",\n        onClick: this.handleSubmit,\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }))))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Successful\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"your notice is posted.\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"okay\"))));\n    }\n  }]);\n\n  return NoticePost;\n}(Component);\n\nexport default NoticePost;","map":{"version":3,"sources":["/Users/basantashah/Projects/notice_front/src/component/postNotice/index.js"],"names":["React","Component","Select","Button","Modal","ModalHeader","ModalBody","ModalFooter","DatePicker","Cookies","NavBar","config","wrapper","display","noticeType","label","value","Urgent","department","NoticePost","handleChange","key","console","log","setState","target","handleNoticeType","selectedOption","handleDepartment","handleSubject","text","subject","handleUrgent","e","urgent","handleMessage","message","postNotice","props","history","push","browseNotice","handletitle","title","handleStatus","status","handleSubmit","event","state","showError","submitForm","preventDefault","cookies","token","get","fetch","method","headers","Authorization","body","JSON","stringify","expiry","expiryDate","content","response","json","res","modal","titleError","subjectError","noticeTypeError","startDate","Date","messageError","departmentError","handleStartDate","bind","handleExpiryDate","showModal","date","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport Cookies from 'universal-cookie';\nimport NavBar from '../navBar'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './postNotice.css'\nimport config from '../../config/config'\nconst wrapper = {\n  display:'flex',\n  'flex-direction':'row',\n  \n}\n\n\nconst noticeType = [\n  {\n    label: \"Notice\",value:'notice'\n  },\n  {\n    label: \"Application\",value:'application'\n  },\n  {\n    label: \"Schedule\",value:'schedule'\n  },\n];\n\nconst Urgent = [\n  {\n    label: \"True\",value:true\n  },\n  {\n    label: \"False\",value:false\n  },\n]\n\nconst department = [\n  {\n    label: \"RTE\",value:\"RTE\"\n  },\n  {\n    label: \"Finance\",value:\"Finance\"\n  },\n  {\n    label: \"Student Department\",value:\"Student Department\"\n  },\n  {\n    label: \"ACADEMIC\",value:\"ACADEMIC\"\n  },\n  {\n    label: \"IT\",value:\"IT\"\n  },\n  {\n    label: \"Other\",value:\"Other\"\n  },\n]\n\nclass NoticePost extends Component {\n    constructor(){\n        super();\n        this.state={\n            showError:false,\n            title:\"\",\n            titleError:'Title is required',\n            subject:\"\",\n            subjectError:\"Subject is required\",\n            noticeType:\"\",\n            noticeTypeError:'Please select notice type',\n            urgent:false,\n            startDate:new Date(),\n            expiryDate: new Date(),\n            message:\"\",\n            messageError:'Message is required',\n            department:\"\",\n            departmentError:'Please select department',\n            modal:false,\n            status:true\n        }\n       // this.handleChange = this.handleChange.bind(this)\n       this.handleStartDate = this.handleStartDate.bind(this)\n       this.handleExpiryDate = this.handleExpiryDate.bind(this)\n       this.handleSubmit = this.handleSubmit.bind(this)\n       this.showModal = this.showModal.bind(this)\n    }\nhandleChange = (key,value)=> {\n    console.log(key,value)\n    this.setState({\n        [key]:value.target.value\n    })\n}\n\nhandleStartDate(date) {\n  this.setState({\n    startDate: date\n  });\n}\n\nhandleExpiryDate(date) {\n  this.setState({\n    expiryDate: date\n  });\n}\n\nhandleNoticeType = (selectedOption) => {\n  console.log('notice type',selectedOption)\n  this.setState({\n    noticeType:selectedOption.value\n  })\n}\n\nhandleDepartment = (selectedOption) => {\n  console.log('notice type',selectedOption)\n  this.setState({\n    department:selectedOption.value\n  })\n}\nhandleSubject = (text)=> {\n  this.setState({\n    subject:text.target.value\n  })\n}\n\nhandleUrgent = (e) => {\n  this.setState({\n    urgent:e.value\n  })\n}\n\nhandleMessage =(e)=> {\n  this.setState({\n    message:e.target.value\n  })\n  console.log('message',e.target.value)\n}\npostNotice = () => {\n    this.props.history.push('/notice')\n}\nbrowseNotice = () => {\n    this.props.history.push('/noticeboard')\n}\n\n\nhandletitle = (text)=> {\n  this.setState({\n    title:text.target.value\n  })\n}\n\nhandleStatus=(e)=> {\n  this.setState({\n    status:e.value\n  })\n}\n\n\n\nhandleSubmit = (event) => {\nif(this.state.title==\"\"||this.state.noticeType==\"\"||this.state.department==\"\"||this.state.message==\"\")\n{\n  this.setState({\n    showError:true\n  })\n  return\n}\nelse{\n  this.submitForm()\n}\nevent.preventDefault();\n}\n\nsubmitForm = async() => {\n  const cookies = new Cookies();\n  const token = cookies.get('token')\n  try{\n    console.log(\"login called inside try\")\n    const response = await fetch(config.postNotice, {\n        method: \"POST\",\n        headers: {\n          'Accept': \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Bearer ' + token\n        },\n          body: JSON.stringify({\n           title:this.state.title,\n           expiry:this.state.expiryDate,\n           subject:this.state.subject,\n           content:this.state.message,\n           department:this.state.department,\n           urgent:this.state.urgent,\n           status:this.state.status\n        })\n      });\n      \n      let res = await response.json();\n      if(res.status){\n        this.setState({\n          modal:!this.state.modal\n        })\n      }\n     \n}\ncatch(e){\n\n}\n}\nshowModal(){\n  this.setState({\n      modal:!this.state.modal\n  })\n   }\n \n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <div class=\"post-notice-wrapper\">\n     <div class=\"post-notice\">\n     <div class=\"cards\">\n  <form class=\"form-notice\" onSubmit={this.handleSubmit}>\n  <div class=\"form-group\">\n    <h4>Title</h4>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Title\" required=\"required\" value={this.state.title} onChange={(text)=>{this.handletitle(text)}}/>\n    <text style={{color:'red'}}>{this.state.showError && this.state.title==\"\" && this.state.titleError}</text>\n    \n  </div>\n  <div class=\"form-group\">\n    <h4>Subject</h4>\n    <input type=\"text\" class=\"form-control\" placeholder=\"subject\" required=\"required\" value={this.state.subject} onChange={(text)=>{this.handleSubject(text)}}/>\n    <text style={{color:'red'}}>{this.state.showError && this.state.subject==\"\" && this.state.subjectError}</text>\n    \n  </div>\n  <div class=\"form-group\">\n    <h4>Notice type</h4>\n    <Select options={ noticeType }  onChange={this.handleNoticeType}/>\n    <text style={{color:'red'}}>{this.state.showError && this.state.noticeType==\"\" &&this.state.noticeTypeError}</text>\n   \n  </div>\n  <div class=\"form-group\">\n    <h4>Urgent</h4>\n    <Select options={ Urgent } onChange={this.handleUrgent} />\n  </div>\n  <div class=\"form-group\">\n    <h4>Status</h4>\n    <Select options={ Urgent } onChange={this.handleStatus} />\n  </div>\n  <div class=\"form-group\">\n    <h4>Department</h4>\n    <Select options={ department }  onChange={this.handleDepartment}/>\n    <text style={{color:'red'}}>{this.state.showError && this.state.department==\"\" &&this.state.departmentError}</text>\n  \n  </div>\n  <div class=\"form-group\">\n    <h4>Date</h4>\n    <DatePicker\n        className=\"date-picker\"\n        selected={this.state.startDate}\n        onChange={this.handleStartDate}\n      />\n   \n  </div>\n\n  <div class=\"form-group\">\n    <h4>Expire period</h4>\n    <DatePicker\n    className=\"date-picker\"\n        selected={this.state.expiryDate}\n        onChange={this.handleExpiryDate}\n      />\n  </div>\n\n  <div class=\"form-group\">\n    <h4>Message</h4>\n    <textarea class=\"form-control rounded-0\"  rows=\"6\" onChange={this.handleMessage}/>\n    <text style={{color:'red'}}>{this.state.showError && this.state.message==\"\"&&this.state.messageError}</text>\n  </div>\n\n \n  <input type=\"submit\" class=\"btn btn-primary btn-lg btn-block\" onClick={this.handleSubmit} value=\"Submit\"/>\n</form>\n</div>\n</div>\n</div>\n<Modal isOpen={this.state.modal} toggle={this.showModal} >\n          <ModalHeader toggle={this.showModal}>Successful</ModalHeader>\n          <ModalBody>\n            your notice is posted.\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"primary\" onClick={this.showModal}>okay</Button>\n          </ModalFooter>\n        </Modal>\n</div>\n    );\n  }\n}\n\nexport default NoticePost;\n"]},"metadata":{},"sourceType":"module"}